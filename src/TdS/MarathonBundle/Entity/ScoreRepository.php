<?php

namespace TdS\MarathonBundle\Entity;

use TdS\MarathonBundle\Entity\Joggeur;
use TdS\MarathonBundle\Entity\Theme;
use TdS\MarathonBundle\Entity\Saison;
use Doctrine\ORM\EntityRepository;

/**
 * ScoreRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ScoreRepository extends \Doctrine\ORM\EntityRepository {
	public function findAll(){
        return $this->findBy(array(), array('id' => 'ASC'));
    }

    public function findAllByJoggeur(Joggeur $joggeur){
    	$queryBuilder=$this->_em->createQueryBuilder()
			->select('a')
			->where('a.joggeur = :joggeur')
       		->setParameter('joggeur', $joggeur)
			->from($this->_entityName,'a');

		  $listeEntries=$queryBuilder
     		->getQuery()
     		->getResult();

    }



    public function findAllBySaison(Saison $saison){
    	$themesId = array();
  		foreach ($saison->getThemes() as $theme) {
      		$themesId[] = $theme->getId();
  		}


    	$queryBuilder=$this->_em->createQueryBuilder()
			->select('a')
			->where('a.theme IN (:theme)')
      ->setParameter('theme', $themesId)
			->from($this->_entityName,'a');

		  return $queryBuilder
     		->getQuery()
     		->getResult();

    }





    public function findAllByTheme(Theme $theme){
    	$queryBuilder=$this->_em->createQueryBuilder()
			->select('a')
			->where('a.theme = :theme')
       		->setParameter('theme', $theme)
			->from($this->_entityName,'a');

		$listeEntries=$queryBuilder
     		->getQuery()
     		->getResult();

    }


}
